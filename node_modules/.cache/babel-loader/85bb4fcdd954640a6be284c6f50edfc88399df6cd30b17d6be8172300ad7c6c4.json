{"ast":null,"code":"var _jsxFileName = \"D:\\\\E25\\\\chatbot\\\\frontend\\\\src\\\\components\\\\ChatBox.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatBox() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const messagesEndRef = useRef(null);\n\n  // 메시지 자동 스크롤\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const sendMessage = async () => {\n    if (!input.trim() || loading) return;\n\n    // 사용자 메시지 추가\n    const newMessages = [...messages, {\n      sender: \"user\",\n      text: input\n    }];\n    setMessages(newMessages);\n    setLoading(true);\n    try {\n      // 백엔드 호출\n      const response = await fetch(\"http://localhost:8000/chat\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          message: input\n        })\n      });\n      const data = await response.json();\n\n      // 봇 메시지 추가\n      setMessages([...newMessages, {\n        sender: \"bot\",\n        text: data.response\n      }]);\n    } catch (error) {\n      console.error(\"Error:\", error);\n      setMessages([...newMessages, {\n        sender: \"bot\",\n        text: \"서버 오류가 발생했습니다.\"\n      }]);\n    } finally {\n      setInput(\"\");\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\",\n      maxWidth: \"500px\",\n      margin: \"0 auto\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"ChatBot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: \"1px solid #ccc\",\n        padding: \"10px\",\n        height: \"300px\",\n        overflowY: \"auto\"\n      },\n      children: [messages.map((msg, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: msg.sender === \"user\" ? \"right\" : \"left\",\n          margin: \"5px 0\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: [msg.sender, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), \" \", msg.text]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"10px\",\n        display: \"flex\",\n        gap: \"2%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyDown: e => e.key === \"Enter\" && sendMessage(),\n        style: {\n          flex: 1,\n          padding: \"5px\"\n        },\n        placeholder: \"\\uBA54\\uC2DC\\uC9C0\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694...\",\n        disabled: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        style: {\n          width: \"80px\"\n        },\n        disabled: loading,\n        children: loading ? \"...\" : \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatBox, \"7kPrHmOLx1GwWjdlHWzonYweftI=\");\n_c = ChatBox;\nexport default ChatBox;\nvar _c;\n$RefreshReg$(_c, \"ChatBox\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","ChatBox","_s","messages","setMessages","input","setInput","loading","setLoading","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","sendMessage","trim","newMessages","sender","text","response","fetch","method","headers","body","JSON","stringify","message","data","json","error","console","style","padding","maxWidth","margin","children","fileName","_jsxFileName","lineNumber","columnNumber","border","height","overflowY","map","msg","i","textAlign","ref","marginTop","display","gap","type","value","onChange","e","target","onKeyDown","key","flex","placeholder","disabled","onClick","width","_c","$RefreshReg$"],"sources":["D:/E25/chatbot/frontend/src/components/ChatBox.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\n\r\nfunction ChatBox() {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const messagesEndRef = useRef(null);\r\n\r\n  // 메시지 자동 스크롤\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  const sendMessage = async () => {\r\n    if (!input.trim() || loading) return;\r\n\r\n    // 사용자 메시지 추가\r\n    const newMessages = [...messages, { sender: \"user\", text: input }];\r\n    setMessages(newMessages);\r\n    setLoading(true);\r\n\r\n    try {\r\n      // 백엔드 호출\r\n      const response = await fetch(\"http://localhost:8000/chat\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ message: input }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      // 봇 메시지 추가\r\n      setMessages([...newMessages, { sender: \"bot\", text: data.response }]);\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n      setMessages([\r\n        ...newMessages,\r\n        { sender: \"bot\", text: \"서버 오류가 발생했습니다.\" },\r\n      ]);\r\n    } finally {\r\n      setInput(\"\");\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: \"20px\", maxWidth: \"500px\", margin: \"0 auto\" }}>\r\n      <h2>ChatBot</h2>\r\n      <div\r\n        style={{\r\n          border: \"1px solid #ccc\",\r\n          padding: \"10px\",\r\n          height: \"300px\",\r\n          overflowY: \"auto\",\r\n        }}\r\n      >\r\n        {messages.map((msg, i) => (\r\n          <div\r\n            key={i}\r\n            style={{\r\n              textAlign: msg.sender === \"user\" ? \"right\" : \"left\",\r\n              margin: \"5px 0\",\r\n            }}\r\n          >\r\n            <p>\r\n              <b>{msg.sender}:</b> {msg.text}\r\n            </p>\r\n          </div>\r\n        ))}\r\n        <div ref={messagesEndRef} />\r\n      </div>\r\n      <div style={{ marginTop: \"10px\", display: \"flex\", gap: \"2%\" }}>\r\n        <input\r\n          type=\"text\"\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          onKeyDown={(e) => e.key === \"Enter\" && sendMessage()}\r\n          style={{ flex: 1, padding: \"5px\" }}\r\n          placeholder=\"메시지를 입력하세요...\"\r\n          disabled={loading}\r\n        />\r\n        <button\r\n          onClick={sendMessage}\r\n          style={{ width: \"80px\" }}\r\n          disabled={loading}\r\n        >\r\n          {loading ? \"...\" : \"Send\"}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatBox;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}